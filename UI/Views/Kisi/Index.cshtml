@model IEnumerable<KisiVM>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>

<div id="toolbar">
    <button id="delete" class="btn btn-danger">Sil</button>

</div>

<table id="grdTable"
       @*data-url="https://localhost:44353/api/Kisi/GET"
      data-ajax="ajaxRequest" AJAX için kullanılacak olan Fonksiyon adı dır.*@
       data-toggle="table"
       data-click-to-select="true"
       data-show-columns="true"
       data-toolbar="#toolbar"
       data-pagination="true"
       data-search="true">
    <thead>
        <tr>
            <th id="chk" data-field="state" data-checkbox="true"></th>
            <th data-field="ad">Ad</th>
            <th data-field="soyad">Soyad</th>
            <th data-field="yas">Yas</th>
            <th data-field="operate" data-formatter="operateFormatter" data-events="window.operateEvents()">İşlem</th>

        </tr>
    </thead>
    <tbody>
        <tr>
        </tr>
    </tbody>
</table>


@*<button id="buttonGuncelle" type="button" class="btn btn-primary btn-lg" data-toggle="modal" data-target="#modalTable">
        Güncelleme Butonu
    </button>*@



<div id="modalTable" class="modal fade" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Modal table</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">

                <input name="Id" type="hidden" id="KisiObjectID" />
                <div class="form-group">
                    <label class="control-label">Ad</label>
                    <input name="ad" id="Ad" class="form-control" />
                </div>
                <div class="form-group">
                    <label class="control-label">Soyad</label>
                    <input name="soyad" id="Soyad" class="form-control" />
                </div>
                <div class="form-group">
                    <label class="control-label">Yaş</label>
                    <input name="yas" id="Yas" class="form-control" />
                </div>

            </div>
            <div class="modal-footer">
                <button id="update" class="btn btn-info">Güncelle</button>
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>








<script>





    var tablo = $('#grdTable');


    //$(document).ready(function () {

    //    $('#delete').click(function () {
    //        //map ile each(JQuery deki foreach aynı şeydir. Fakat tek farkı map fonksiyonu geriye array türünde nesne döndürür.)
    //        var ids = $.map(tablo.bootstrapTable('getSelections'), function (row) {
    //            return row.id;
    //        });
    //        console.log(ids);
    //        Delete(ids);
    //        tablo.bootstrapTable('remove', {
    //            field: 'id',
    //            values: ids
    //        });
    //    });


    //});


    VeriListele();


    function VeriListele() {
        var url = "https://localhost:44353/api/Kisi/GET";

        $.ajax({
            url: url,
            type: 'GET',
            dataType: 'json',
            async: false,
            success: function (result) {
                $('#grdTable').bootstrapTable('load', result);
                $('#grdTable').bootstrapTable({ data: result });

            },
            error: function (err) {
                alert("hata var");
                console.log(err);
            }

        });

    };
    window.operateEvents = {
        'click .remove': function (e, value, row, index) {
            tablo.bootstrapTable('remove', {
                field: 'id',
                values: [row.id]
            })
        }
    };

    //\'' + valuationId + '\',\'' + user + '\'

    //join() bir arraydaki bilgileri birleştirir.
    function operateFormatter(value, row, index) {
        console.log(row.id);
        console.log(row);
        return [
            `<button class="btn btn-outline-danger remove" onclick="Sil(${row.id})">`,
            '<i class="fa fa-trash"></i>',
            '</button>',
            '<button class="btn btn-outline-info" type="button" data-toggle="modal" data-target="#modalTable" onclick="UpdateButton(\'' + row.id + '\',\'' + row.ad + '\', \'' + row.soyad + '\',\'' + row.yas + '\') ">',/*https://stackoverflow.com/questions/13285489/pass-multiple-values-with-onclick-in-html-link den bunun nasıl yapıldığı anlatıyor. row nesnesi direk UpdateButton ile yollanamdığı için kullanılır.*/
            '<i class="fa fa-edit"></i>',
            '</button>'
        ].join('');
    };


    $(function () {
        $('#delete').click(function () {
            //map ile each(JQuery deki foreach aynı şeydir. Fakat tek farkı map fonksiyonu geriye array türünde nesne döndürür.)
            var ids = $.map(tablo.bootstrapTable('getSelections'), function (row) {
                return row.id;
            });
            Delete(ids);
            tablo.bootstrapTable('remove', {
                field: 'id',
                values: ids
            });
        });
    });


    /*https://stackoverflow.com/questions/39791568/how-do-you-add-bootstrap-buttons-in-bootstrap-table bootsrapt konusu anlatılıyor.*/

    function Sil(id) {//Buradaki id tek bir id değil id listesidir.


        //if (!confirm('Silmek istediğinize emin misiniz')) {
        //    return;
        //}
        //var _data = [JSON.stringify(id)];
        //console.log(_data);

        var _id = [id];
        var _data = JSON.stringify(_id);
        //console.log(_id);
        $.ajax({
            url: "https://localhost:44353/api/Kisi/Delete",
            type: 'DELETE',
            dataType: 'json',
            data: _data,
            contentType: 'application/json; charset=utf-8',
            success: function (result) {
                alert("Silme Başarılı!");
                window.location.href = 'https://localhost:44368/Kisi';
            },
            failure: function (err) {
                alert("Delete kısmında hata var kontrol et!!!");
                console.log(err);
            }

        });
        tablo.bootstrapTable('remove', {
            field: 'id',
            values: _id
        })
    }

    function Delete(id) {//Buradaki id tek bir id değil id listesidir.
        // console.log(id);
        var _data = JSON.stringify(id);
        //console.log(_data);
        $.ajax({
            url: "https://localhost:44353/api/Kisi/Delete",
            type: 'DELETE',
            dataType: 'json',
            data: _data,
            contentType: 'application/json; charset=utf-8',
            success: function (result) {
                alert("Silme Başarılı!");
                window.location.href = 'https://localhost:44368/Kisi';
            },
            failure: function (err) {
                alert("Delete kısmında hata var kontrol et!!!");
                console.log(err);
            }

        });
    };


  
    function Kisi(id, ad, soyad, yas) {
            /*https://www.freecodecamp.org/news/javascript-classes-how-they-work-with-use-case/ bu metot un nasıl yapılacağı anlatılıyor. */
        this.id = id;
        this.ad = ad;
        this.soyad = soyad;
        this.yas = yas;
    }

    function UpdateButton(id,ad,soyad,yas) {
       
        Edit(id);
        $('#update').click(function () {
            ad = $("#Ad").val();
            soyad = $("#Soyad").val();
            yas = $("#Yas").val();
            const kisi = new Kisi(id, ad, soyad, yas);
            Update(kisi);
            $('#modalTable').modal('close');
        });

    };


    $('#buttonGuncelle').click(function () {/*Bu metot selection ile yapmak için kullanılmıştır Şuan kullanılmıyor.*/
        var ids = $.map(tablo.bootstrapTable('getSelections'), function (row) {
            Edit(row.id);
            $('#update').click(function () {
                row.ad = $("#Ad").val();
                row.soyad = $("#Soyad").val();
                row.yas = $("#Yas").val();
                console.log(row);
                Update(row);
            });
            return row.id;

            tablo.bootstrapTable('updateRow', {
                index: 'id',
                row: {
                    id: row.id,
                    ad: row.ad,
                    soyad: row.soyad,
                    isActive: true,
                    yas: row.yas
                }
            });
        });
    });
    function Edit(id) {

        $.ajax({
            url: 'https://localhost:44353/api/Kisi/Get/' + id,
            type: 'GET',
            dataType: 'json',
            data: { Id: id },
            async: false,
            success: function (result) {


                $("#Ad").val(result.ad);
                $("#Soyad").val(result.soyad);
                $("#Yas").val(result.yas);

            },
            error: function (err) {
                console.log(err);
                alert("Update kısmında hata var düzelt!!!");
            }
        });
    };




    function Update(obj) {

        var _nesne = JSON.stringify(obj);
        //var _id = obj.id;
        console.log(_nesne);
        $.ajax({
            url: 'https://localhost:44353/api/Kisi/Put',
            type: 'PUT',
            //data: { nesne: _nesne },
            data: _nesne,
            contentType: 'application/json; charset=utf-8',
            dataType: 'json',
            success: function (result) {
                console.log(result);
                window.location.reload();
            },
            failure: function (err) {
                alert("Update kısmında hata var düzelt!!!");
            }
        })
    }

</script>